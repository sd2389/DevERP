# Generated by Django 4.2.17 on 2025-04-26 03:26

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("inventory", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=120, unique=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=120, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=120, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("job_no", models.CharField(max_length=50, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("In Stock", "In Stock"),
                            ("On Memo", "On Memo"),
                            ("Sold", "Sold"),
                            ("In Production", "In Production"),
                        ],
                        default="In Stock",
                        max_length=20,
                    ),
                ),
                (
                    "metal_type",
                    models.CharField(
                        choices=[
                            ("Gold", "Gold"),
                            ("Platinum", "Platinum"),
                            ("Silver", "Silver"),
                            ("Mixed", "Mixed"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "metal_quality",
                    models.CharField(
                        choices=[
                            ("14k", "14k"),
                            ("18k", "18k"),
                            ("22k", "22k"),
                            ("24k", "24k"),
                            ("950", "950 Platinum"),
                            ("925", "925 Silver"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "metal_color",
                    models.CharField(
                        choices=[
                            ("White", "White"),
                            ("Yellow", "Yellow"),
                            ("Rose", "Rose"),
                            ("Mixed", "Mixed"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "gwt",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Gross Weight (g)"
                    ),
                ),
                (
                    "dwt",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=6,
                        verbose_name="Diamond Weight (ct)",
                    ),
                ),
                (
                    "size",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.1"))
                        ],
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["job_no"],
            },
        ),
        migrations.CreateModel(
            name="MemoRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Requested", "Requested"),
                            ("Processing", "Processing"),
                            ("Available", "Available"),
                            ("Denied", "Denied"),
                        ],
                        default="Requested",
                        max_length=20,
                    ),
                ),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memo_requests",
                        to="inventory.job",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memo_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-requested_at"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("design_no", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="inventory.category",
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="inventory.collection",
                    ),
                ),
                (
                    "gender",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="inventory.gender",
                    ),
                ),
            ],
            options={
                "ordering": ["design_no"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="products/")),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("White", "White"),
                            ("Yellow", "Yellow"),
                            ("Rose", "Rose"),
                            ("Mixed", "Mixed"),
                        ],
                        default="White",
                        max_length=20,
                    ),
                ),
                ("position", models.PositiveSmallIntegerField(default=1)),
                ("is_primary", models.BooleanField(default=False)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="inventory.product",
                    ),
                ),
            ],
            options={
                "ordering": ["product", "color", "position"],
            },
        ),
        migrations.CreateModel(
            name="ProductType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=120, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProductView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="views",
                        to="inventory.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subcategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=120, unique=True)),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="inventory.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Subcategories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WishlistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_on", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wishlist_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-added_on"],
                "unique_together": {("user", "product")},
            },
        ),
        migrations.DeleteModel(
            name="RequestItem",
        ),
        migrations.AddField(
            model_name="product",
            name="product_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="products",
                to="inventory.producttype",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="subcategory",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="products",
                to="inventory.subcategory",
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="jobs",
                to="inventory.product",
            ),
        ),
        migrations.AddIndex(
            model_name="productview",
            index=models.Index(
                fields=["timestamp"], name="inventory_p_timesta_b6f0c8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productview",
            index=models.Index(
                fields=["session_id"], name="inventory_p_session_a65fca_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productimage",
            unique_together={("product", "color", "position")},
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["design_no"], name="inventory_p_design__d800c9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["created_at"], name="inventory_p_created_081871_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(fields=["job_no"], name="inventory_j_job_no_d626a9_idx"),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(fields=["status"], name="inventory_j_status_d6dcf1_idx"),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["metal_color"], name="inventory_j_metal_c_ec7c32_idx"
            ),
        ),
    ]
